The 2-matrix_divided module
===========================

Using matrix_divided
---------------------

Importing function from the module:
    >>> matrix_divided = __import__('2-matrix_divided').matrix_divided

Dividing a 2x3 matrix by 3:
    >>> matrix = [
    ...     [1, 2, 3],
    ...     [4, 5, 6]
    ... ]
    >>> matrix_divided(matrix, 3)
    [[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

Matrix remains unchanged:
    >>> print(matrix)
    [[1, 2, 3], [4, 5, 6]]

Dividing a 2x2 matrix by 2:
    >>> matrix_divided([[2, 4], [6, 8]], 2)
    [[1.0, 2.0], [3.0, 4.0]]

Dividing by a float divisor:
    >>> matrix_divided([[4.2, 8.4], [12.6, 16.8]], 2.1)
    [[2.0, 4.0], [6.0, 8.0]]

Matrix with a single row:
    >>> matrix_divided([[10, 20, 30]], 10)
    [[1.0, 2.0, 3.0]]

Invalid matrix type (not a list of lists):
    >>> matrix_divided("not a matrix", 2)
    Traceback (most recent call last):
        ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

Invalid matrix element type:
    >>> matrix_divided([[1, 2, 3], [4, '5', 6]], 2)
    Traceback (most recent call last):
        ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

Different row sizes:
    >>> matrix_divided([[1, 2], [3, 4, 5]], 2)
    Traceback (most recent call last):
        ...
    TypeError: Each row of the matrix must have the same size

Invalid divisor type:
    >>> matrix_divided([[1, 2, 3], [4, 5, 6]], "3")
    Traceback (most recent call last):
        ...
    TypeError: div must be a number

Division by zero:
    >>> matrix_divided([[1, 2, 3], [4, 5, 6]], 0)
    Traceback (most recent call last):
        ...
    ZeroDivisionError: division by zero
